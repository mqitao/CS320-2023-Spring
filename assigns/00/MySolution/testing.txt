[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = () : unit
- use "assign00-01-test.sml";
[opening assign00-01-test.sml]
[opening ./../MySolution/assign00-01.sml]
val N = 13 : int
val it = () : unit
Assign00-01-test passed!
val it = () : unit
-
- use "assign00-02-test.sml";
[opening assign00-02-test.sml]
[opening ./../MySolution/assign00-02.sml]
val rePrime = fn : int * int -> bool
val isPrime = fn : int -> bool
val it = () : unit
Assign00-02-test passed!
val it = () : unit
-
- use "assign00-03-test.sml";
[opening assign00-03-test.sml]
[opening ./../MySolution/assign00-03.sml]
val lastDigit = fn : int * int -> string
val int2str = fn : int -> string
val it = () : unit
Assign00-03-test passed!
val it = () : unit
-
- use "assign00-04-test.sml";
[opening assign00-04-test.sml]
[opening ./../MySolution/assign00-04.sml]
val power = fn : int -> int
val restr2int = fn : string * char * int * int -> int
val str2int = fn : string -> int
val it = () : unit
Assign00-04-test passed!
val it = () : unit
-
- use "assign00-05-test.sml";
[opening assign00-05-test.sml]
[opening ./../MySolution/assign00-05.sml]
val restringrev = fn : string * int -> string
val stringrev = fn : string -> string
val it = () : unit
Assign00-05-test passed!
val it = () : unit